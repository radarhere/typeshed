from typing import Any, Iterator, Match

def hook_re_module() -> None: ...

class EnabledHooks:
  def __init__(self) -> None: ...
  def add(self, hook: str) -> None: ...
  def __contains__(self, hook: str) -> bool: ...

enabled_hooks: EnabledHooks

class AtherisPatternProxy:
  def search(self, string: str) -> Match[Any] | None: ...
  def match(self, string: str) -> Match[Any] | None: ...
  def fullmatch(self, string: str) -> Match[str] | None: ...
  def findall(self, string: str) -> list[str]: ...
  def finditer(self, string: str) -> Iterator[Match[str]]: ...
  def __getattr__(self, attr: str) -> Any: ...

def _hook_str(*args: Any, **kwargs: Any) -> bool: ...
